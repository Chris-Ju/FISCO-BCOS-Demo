{"remainingRequest":"/Users/chrisju/vue/vue-manage-system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrisju/vue/vue-manage-system/src/components/common/Tags.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrisju/vue/vue-manage-system/src/components/common/Tags.vue","mtime":1576123983674},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport bus from './bus';\nexport default {\n    data() {\n        return {\n            tagsList: []\n        }\n    },\n    methods: {\n        isActive(path) {\n            return path === this.$route.fullPath;\n        },\n        // 关闭单个标签\n        closeTags(index) {\n            const delItem = this.tagsList.splice(index, 1)[0];\n            const item = this.tagsList[index] ? this.tagsList[index] : this.tagsList[index - 1];\n            if (item) {\n                delItem.path === this.$route.fullPath && this.$router.push(item.path);\n            }else{\n                this.$router.push('/');\n            }\n        },\n        // 关闭全部标签\n        closeAll(){\n            this.tagsList = [];\n            this.$router.push('/');\n        },\n        // 关闭其他标签\n        closeOther(){\n            const curItem = this.tagsList.filter(item => {\n                return item.path === this.$route.fullPath;\n            })\n            this.tagsList = curItem;\n        },\n        // 设置标签\n        setTags(route){\n            const isExist = this.tagsList.some(item => {\n                return item.path === route.fullPath;\n            })\n            if(!isExist){\n                if(this.tagsList.length >= 8){\n                    this.tagsList.shift();\n                }\n                this.tagsList.push({\n                    title: route.meta.title,\n                    path: route.fullPath,\n                    name: route.matched[1].components.default.name\n                })\n            }\n            bus.$emit('tags', this.tagsList);\n        },\n        handleTags(command){\n            command === 'other' ? this.closeOther() : this.closeAll();\n        }\n    },\n    computed: {\n        showTags() {\n            return this.tagsList.length > 0;\n        }\n    },\n    watch:{\n        $route(newValue, oldValue){\n            this.setTags(newValue);\n        }\n    },\n    created(){\n        this.setTags(this.$route);\n        // 监听关闭当前页面的标签页\n        bus.$on('close_current_tags', () => {\n            for (let i = 0, len = this.tagsList.length; i < len; i++) {\n                const item = this.tagsList[i];\n                if(item.path === this.$route.fullPath){\n                    if(i < len - 1){\n                        this.$router.push(this.tagsList[i+1].path);\n                    }else if(i > 0){\n                        this.$router.push(this.tagsList[i-1].path);\n                    }else{\n                        this.$router.push('/');\n                    }\n                    this.tagsList.splice(i, 1);\n                    break;\n                }\n            }\n        })\n    }\n}\n\n",null]}