{"remainingRequest":"/Users/chrisju/vue/vue-manage-system/node_modules/thread-loader/dist/cjs.js!/Users/chrisju/vue/vue-manage-system/node_modules/babel-loader/lib/index.js!/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrisju/vue/vue-manage-system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrisju/vue/vue-manage-system/node_modules/vue-schart/src/vue-schart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/vue-schart/src/vue-schart.vue","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/chrisju/vue/vue-manage-system/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\nimport Schart from \"schart.js\";\nexport default {\n  props: {\n    canvasId: {\n      type: String,\n      default: \"\",\n      required: true\n    },\n    options: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    this.renderChart();\n  },\n  methods: {\n    renderChart: function renderChart() {\n      if (!this.checkOptions()) {\n        return;\n      }\n\n      var opt = _objectSpread({}, this.options);\n\n      new Schart(this.canvasId, opt);\n    },\n    checkOptions: function checkOptions() {\n      var opt = this.options;\n\n      if (!opt.datasets || !opt.datasets.length) {\n        return false;\n      }\n\n      if (!opt.labels || !opt.labels.length) {\n        return false;\n      }\n\n      return true;\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(newValue, oldValue) {\n        this.renderChart();\n      },\n      deep: true\n    }\n  }\n};",null]}