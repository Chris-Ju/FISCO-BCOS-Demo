{"remainingRequest":"/Users/chrisju/vue/vue-manage-system/node_modules/thread-loader/dist/cjs.js!/Users/chrisju/vue/vue-manage-system/node_modules/babel-loader/lib/index.js!/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrisju/vue/vue-manage-system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrisju/vue/vue-manage-system/src/components/page/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrisju/vue/vue-manage-system/src/components/page/Upload.vue","mtime":1576123983678},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrisju/vue/vue-manage-system/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueCropper from 'vue-cropperjs';\nexport default {\n  name: 'upload',\n  data: function data() {\n    return {\n      defaultSrc: require(\"../../assets/img/img.jpg\"),\n      fileList: [],\n      imgSrc: '',\n      cropImg: '',\n      dialogVisible: false\n    };\n  },\n  components: {\n    VueCropper: VueCropper\n  },\n  methods: {\n    setImage: function setImage(e) {\n      var _this = this;\n\n      var file = e.target.files[0];\n\n      if (!file.type.includes('image/')) {\n        return;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        _this.dialogVisible = true;\n        _this.imgSrc = event.target.result;\n        _this.$refs.cropper && _this.$refs.cropper.replace(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n    },\n    cropImage: function cropImage() {\n      this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n    },\n    cancelCrop: function cancelCrop() {\n      this.dialogVisible = false;\n      this.cropImg = this.defaultSrc;\n    },\n    imageuploaded: function imageuploaded(res) {\n      console.log(res);\n    },\n    handleError: function handleError() {\n      this.$notify.error({\n        title: '上传失败',\n        message: '图片上传接口上传失败，可更改为自己的服务器接口'\n      });\n    }\n  },\n  created: function created() {\n    this.cropImg = this.defaultSrc;\n  }\n};",null]}